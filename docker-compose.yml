version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: contech-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ConTech_MongoDB_2024!Secure
      MONGO_INITDB_DATABASE: contech
    volumes:
      - mongodb-data:/data/db
      - mongodb-config:/data/configdb
      - ./mongodb/init:/docker-entrypoint-initdb.d:ro
      - ./mongodb/backups:/backups
    networks:
      - contech-network
    command: --auth --bind_ip_all
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # MongoDB Express (Web UI for database management)
  mongo-express:
    image: mongo-express:1.0.2
    container_name: contech-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: ConTech_MongoDB_2024!Secure
      ME_CONFIG_MONGODB_URL: mongodb://admin:ConTech_MongoDB_2024!Secure@mongodb:27017/?authSource=admin
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: contech_admin
      ME_CONFIG_BASICAUTH_PASSWORD: WebUI_Access_2024!
    networks:
      - contech-network
    depends_on:
      - mongodb

  # Node.js Application
  api:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: contech-api
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    networks:
      - contech-network
    depends_on:
      - mongodb
      - mqtt-broker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Mosquitto MQTT Broker
  mqtt-broker:
    image: eclipse-mosquitto:2.0.18
    container_name: contech-mqtt
    restart: unless-stopped
    ports:
      - "1884:1884"      # MQTT port
      - "9002:9002"      # WebSocket port
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/logs:/mosquitto/log
    networks:
      - contech-network
    command: mosquitto -c /mosquitto/config/mosquitto.conf

  # Nginx Reverse Proxy (for domain setup)
  nginx:
    image: nginx:alpine
    container_name: contech-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    networks:
      - contech-network
    depends_on:
      - api
      - mqtt-broker

networks:
  contech-network:
    driver: bridge

volumes:
  mongodb-data:
    driver: local
  mongodb-config:
    driver: local
  mosquitto-data:
  mosquitto-logs: